// Your variable overrides
$primary: #5AB8E8;
$success: #66CABE;
$linkedin: #255A80;

// Bootstrap and its default variables
@import "node_modules/bootstrap/scss/bootstrap";



@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant(theme-color($color), theme-color($color), $hover-background: darken(theme-color($color), 7.5%), $hover-border: darken(theme-color($color), 10%), $active-background: darken(theme-color($color), 10%), $active-border: darken(theme-color($color), 12.5%));
    color: white;
  }
  .btn-#{$color}:hover {
    color: white;
  }
  .badge-outline.badge-#{$color} {
    color: theme-color($color);
    background-color: transparent;
    border: 1px solid theme-color($color);
  }
}

.btn-linkedin {
  @include button-variant($linkedin, $linkedin, $hover-background: darken($linkedin, 7.5%), $hover-border: darken($linkedin, 10%), $active-background: darken($linkedin, 10%), $active-border: darken($linkedin, 12.5%));
  color: white;
}
.btn-linkedin:hover {
  color: white;
}

.e-bloc-jumbo{
  background: $dark;
  color: white;
}

.hr-dark{
  border-top: 1px solid white;
}

// Colors
$gray: $secondary;
$gray-light: lighten($gray, 15%);
$gray-lighter: lighten($gray, 30%);

// Button Colors
$btn-default-color:$gray;
$btn-default-bg: $gray-lighter;

// Toggle Sizes
$toggle-default-size: 1.5rem;
$toggle-default-label-width: 4rem;
$toggle-default-font-size: .75rem;


// Mixin for Switch Colors
// Variables: @color, @bg, @active-bg
@mixin toggle-color($color: $btn-default-color, $bg: $btn-default-bg, $active-bg: $brand-primary) {
  color: $color;
  background: $bg;
  &:before,
  &:after {
    color: $color;
  }
  &.active {
    background-color: $active-bg;
  }
}

// Mixin for Default Switch Styles
// Variables: @size, @margin, @color, @bg, @active-bg, @font-size
@mixin toggle-mixin($size: $toggle-default-size, $margin: $toggle-default-label-width, $font-size: $toggle-default-font-size) {
  // color: @color;
  // background: @bg;
  margin: 0 $margin;
  padding: 0;
  position: relative;
  border: none;
  height: $size;
  width: $size * 2;
  border-radius: $size;
  
  &:focus,
  &.focus {
    &,
    &.active {
      outline: none;
    }
  }
  
  &:before,
  &:after {
    line-height: $size;
    width: $margin;
    text-align: center;
    font-weight: 600;
    // color: @color;
    font-size: $font-size;
    text-transform: uppercase;
    letter-spacing: 2px;
    position: absolute;
    bottom: 0;
    transition: opacity .25s;
  }
  &:before {
    // content: 'Off';
    left: -$margin;
  }
  &:after {
    // content: 'On';
    right: -$margin;
    opacity: .5;
  }
  
  .handle {
    position: absolute;
    top: ($size * .25) / 2;
    left: ($size * .25) / 2;
    width: $size * .75;
    height: $size * .75;
    border-radius: $size * .75;
    background: #fff;
    transition: left .25s;
  }
  &.active {
    transition: background-color .25s;
    > .handle {
      left: $size + (($size * .25) / 2);
      transition: left .25s;
    }
    &:before {
      opacity: .5;
    }
    &:after {
      opacity: 1;
    }
  }
  
  &.btn-sm {
    &:before,
    &:after {
      line-height: $size - 0.12rem;
      color: #fff;
      letter-spacing: 0.05rem;
      left: $size * .275;
      width: $size * 1.55;
    }
    &:before {
      text-align: right;
    }
    &:after {
      text-align: left;
      opacity: 0;
    }
    &.active {
      &:before {
        opacity: 0;
      }
      &:after {
        opacity: 1;
      }
    }
  }
  
  &.btn-xs {
    &:before,
    &:after {
      display: none;
    }
  }
}



// Apply Mixin to different sizes & colors
.btn-toggle {
  
  
  &.btn-lg {
    @include toggle-mixin($size: 2.5rem, $font-size: 1rem, $margin: 5rem);
  }
  
  &.btn-sm {
    @include toggle-mixin($font-size: .55rem, $margin: .5rem);
  }
  
  &.btn-xs {
    @include toggle-mixin($size:1rem, $margin:0);
  }
  
  &.toggle-primary {
    @include toggle-color($active-bg:$primary);
  }
  &.toggle-primary-uniform{
    @include toggle-color($active-bg:$primary, $bg:$primary);
  }

  &.toggle-success {
    @include toggle-color($active-bg:$success);
  }
  &.toggle-success-uniform {
    @include toggle-color($active-bg:$success, $bg:$success);
  }
}
